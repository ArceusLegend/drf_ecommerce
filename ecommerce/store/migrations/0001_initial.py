# Generated by Django 5.1.4 on 2025-01-05 19:00

import django.db.models.deletion
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Artist",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("artist_image", models.ImageField(upload_to="artists/pfp/")),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="DigitalFiles",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("file", models.FileField(upload_to="")),
            ],
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("image", models.ImageField(blank=True, null=True, upload_to="audiobooks/images/")),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                ("alt_text", models.CharField(max_length=125)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Product image",
                "verbose_name_plural": "Product images",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, verbose_name="Category name")),
                ("slug", models.SlugField(max_length=150, verbose_name="URL-safe category name")),
                ("is_active", models.BooleanField(default=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="store.category",
                        verbose_name="Parent Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Category",
                "verbose_name_plural": "Product Categories",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("sku", models.CharField(blank=True, max_length=255, null=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("slug", models.SlugField(max_length=150, unique=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=4)),
                ("sale_price", models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=4, null=True)),
                ("is_digital", models.BooleanField()),
                ("published_date", models.DateTimeField(auto_now_add=True)),
                ("updated_date", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("artist", models.ManyToManyField(blank=True, related_name="products", to="store.artist")),
                ("associated_files", models.ManyToManyField(blank=True, to="store.digitalfiles")),
                ("category", mptt.fields.TreeManyToManyField(to="store.category")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="product_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product_image",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="store.image"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Variation",
            fields=[
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                ("price_increase", models.DecimalField(decimal_places=2, max_digits=4)),
                ("is_downloadable", models.BooleanField(default=False)),
                ("downloadable_file", models.FileField(blank=True, null=True, upload_to="audiobooks/downloadable/")),
                ("for_product", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="store.product")),
                (
                    "variation_image",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="store.image"
                    ),
                ),
            ],
        ),
    ]
