openapi: 3.0.3
info:
  title: DRF Ecommerce API
  version: 0.1.0
  description: This is a django backend API service runnning DRF
paths:
  /api/artists/:
    get:
      operationId: artists_list
      description: API endpoint that allows `Artist` objects to be viewed or edited.
      tags:
      - artists
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
          description: ''
    post:
      operationId: artists_create
      description: API endpoint that allows `Artist` objects to be viewed or edited.
      tags:
      - artists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artist'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
  /api/artists/{uuid}/:
    get:
      operationId: artists_retrieve
      description: API endpoint that allows `Artist` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this artist.
        required: true
      tags:
      - artists
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
    put:
      operationId: artists_update
      description: API endpoint that allows `Artist` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this artist.
        required: true
      tags:
      - artists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artist'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
    patch:
      operationId: artists_partial_update
      description: API endpoint that allows `Artist` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this artist.
        required: true
      tags:
      - artists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedArtist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedArtist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedArtist'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
          description: ''
    delete:
      operationId: artists_destroy
      description: API endpoint that allows `Artist` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this artist.
        required: true
      tags:
      - artists
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/categories/:
    get:
      operationId: categories_list
      description: API endpoint that allows `Category` objects to be viewed or edited.
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: categories_create
      description: API endpoint that allows `Category` objects to be viewed or edited.
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{uuid}/:
    get:
      operationId: categories_retrieve
      description: API endpoint that allows `Category` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product Category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      description: API endpoint that allows `Category` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product Category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      description: API endpoint that allows `Category` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product Category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      description: API endpoint that allows `Category` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product Category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/files/:
    get:
      operationId: files_list
      description: API endpoint that allows `DigitalFiles` objects to be viewed or
        edited.
      tags:
      - files
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DigitalFiles'
          description: ''
    post:
      operationId: files_create
      description: API endpoint that allows `DigitalFiles` objects to be viewed or
        edited.
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalFiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DigitalFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DigitalFiles'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalFiles'
          description: ''
  /api/files/{id}/:
    get:
      operationId: files_retrieve
      description: API endpoint that allows `DigitalFiles` objects to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this digital files.
        required: true
      tags:
      - files
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalFiles'
          description: ''
    put:
      operationId: files_update
      description: API endpoint that allows `DigitalFiles` objects to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this digital files.
        required: true
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalFiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DigitalFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DigitalFiles'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalFiles'
          description: ''
    patch:
      operationId: files_partial_update
      description: API endpoint that allows `DigitalFiles` objects to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this digital files.
        required: true
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDigitalFiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDigitalFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDigitalFiles'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalFiles'
          description: ''
    delete:
      operationId: files_destroy
      description: API endpoint that allows `DigitalFiles` objects to be viewed or
        edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this digital files.
        required: true
      tags:
      - files
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/images/:
    get:
      operationId: images_list
      description: API endpoint that allows `Image` objects to be viewed or edited.
      tags:
      - images
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
          description: ''
    post:
      operationId: images_create
      description: API endpoint that allows `Image` objects to be viewed or edited.
      tags:
      - images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
  /api/images/{uuid}/:
    get:
      operationId: images_retrieve
      description: API endpoint that allows `Image` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product image.
        required: true
      tags:
      - images
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    put:
      operationId: images_update
      description: API endpoint that allows `Image` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product image.
        required: true
      tags:
      - images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    patch:
      operationId: images_partial_update
      description: API endpoint that allows `Image` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product image.
        required: true
      tags:
      - images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImage'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    delete:
      operationId: images_destroy
      description: API endpoint that allows `Image` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Product image.
        required: true
      tags:
      - images
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: products_list
      description: API endpoint that allows `Product` objects to be viewed or edited.
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: products_create
      description: API endpoint that allows `Product` objects to be viewed or edited.
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{uuid}/:
    get:
      operationId: products_retrieve
      description: API endpoint that allows `Product` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      description: API endpoint that allows `Product` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      description: API endpoint that allows `Product` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      description: API endpoint that allows `Product` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/variations/:
    get:
      operationId: variations_list
      description: API endpoint that allows `Variation` objects to be viewed or edited.
      tags:
      - variations
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Variation'
          description: ''
    post:
      operationId: variations_create
      description: API endpoint that allows `Variation` objects to be viewed or edited.
      tags:
      - variations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Variation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Variation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variation'
          description: ''
  /api/variations/{uuid}/:
    get:
      operationId: variations_retrieve
      description: API endpoint that allows `Variation` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this variation.
        required: true
      tags:
      - variations
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variation'
          description: ''
    put:
      operationId: variations_update
      description: API endpoint that allows `Variation` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this variation.
        required: true
      tags:
      - variations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Variation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Variation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variation'
          description: ''
    patch:
      operationId: variations_partial_update
      description: API endpoint that allows `Variation` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this variation.
        required: true
      tags:
      - variations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVariation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVariation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVariation'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variation'
          description: ''
    delete:
      operationId: variations_destroy
      description: API endpoint that allows `Variation` objects to be viewed or edited.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this variation.
        required: true
      tags:
      - variations
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Artist:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        artist_image:
          type: string
          format: uri
        description:
          type: string
      required:
      - artist_image
      - name
      - url
    Category:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Category name
          maxLength: 100
        slug:
          type: string
          title: URL-safe category name
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
        lft:
          type: integer
          readOnly: true
        rght:
          type: integer
          readOnly: true
        tree_id:
          type: integer
          readOnly: true
        level:
          type: integer
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
          title: Parent Category
      required:
      - level
      - lft
      - name
      - rght
      - slug
      - tree_id
      - url
    DigitalFiles:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        file:
          type: string
          format: uri
      required:
      - file
      - url
    Image:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        alt_text:
          type: string
          maxLength: 125
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alt_text
      - created_at
      - name
      - updated_at
      - url
    PatchedArtist:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        artist_image:
          type: string
          format: uri
        description:
          type: string
    PatchedCategory:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Category name
          maxLength: 100
        slug:
          type: string
          title: URL-safe category name
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
        lft:
          type: integer
          readOnly: true
        rght:
          type: integer
          readOnly: true
        tree_id:
          type: integer
          readOnly: true
        level:
          type: integer
          readOnly: true
        parent:
          type: string
          format: uri
          nullable: true
          title: Parent Category
    PatchedDigitalFiles:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        file:
          type: string
          format: uri
    PatchedImage:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        alt_text:
          type: string
          maxLength: 125
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProduct:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        sku:
          type: string
          nullable: true
          maxLength: 255
        title:
          type: string
          maxLength: 255
        description:
          type: string
        slug:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
        is_digital:
          type: boolean
        published_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        created_by:
          type: string
          format: uri
          nullable: true
        product_image:
          type: string
          format: uri
          nullable: true
        category:
          type: array
          items:
            type: string
            format: uri
        artist:
          type: array
          items:
            type: string
            format: uri
        associated_files:
          type: array
          items:
            type: string
            format: uri
    PatchedVariation:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        price_increase:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        is_downloadable:
          type: boolean
        downloadable_file:
          type: string
          format: uri
          nullable: true
        for_product:
          type: string
          format: uri
        variation_image:
          type: string
          format: uri
          nullable: true
    Product:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        sku:
          type: string
          nullable: true
          maxLength: 255
        title:
          type: string
          maxLength: 255
        description:
          type: string
        slug:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
        is_digital:
          type: boolean
        published_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        created_by:
          type: string
          format: uri
          nullable: true
        product_image:
          type: string
          format: uri
          nullable: true
        category:
          type: array
          items:
            type: string
            format: uri
        artist:
          type: array
          items:
            type: string
            format: uri
        associated_files:
          type: array
          items:
            type: string
            format: uri
      required:
      - category
      - is_digital
      - price
      - published_date
      - slug
      - title
      - updated_date
      - url
    Variation:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 255
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        price_increase:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        is_downloadable:
          type: boolean
        downloadable_file:
          type: string
          format: uri
          nullable: true
        for_product:
          type: string
          format: uri
        variation_image:
          type: string
          format: uri
          nullable: true
      required:
      - for_product
      - name
      - price_increase
      - slug
      - url
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
